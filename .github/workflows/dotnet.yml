name: dotnet package

on: [push]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  unittest:
    name: Run unit tests
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIG: 'Release'
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        id: setup-dotnet
        with:
          dotnet-version: '8.0.x'
          
      - name: Run unit tests
        run: dotnet test Minio.UnitTests --configuration $BUILD_CONFIG --logger trx --results-directory "UnitTestResults"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: unit-tests
          path: UnitTestResults
        
      - name: Publish test report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Unit test report
          path: UnitTestResults/*.trx
          reporter: dotnet-trx

  integrationtest:
    name: Run integration tests
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIG: 'Release'
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        id: setup-dotnet
        with:
          dotnet-version: '8.0.x'

      - name: Run integration tests
        run: dotnet test Minio.IntegrationTests --configuration $BUILD_CONFIG --logger trx --results-directory "IntegrationTestResults"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: integration-tests
          path: IntegrationTestResults

      - name: Publish test report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Integration test report
          path: IntegrationTestResults/*.trx
          reporter: dotnet-trx

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    needs: [unittest,integrationtest]
    env:
      BUILD_CONFIG: 'Release'
      VERSION: '0.0.0'
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        id: setup-dotnet
        with:
          dotnet-version: '8.0.x'

      - name: Set Version Variable
        if: ${{ github.ref_type == 'tag' }}
        env:
          TAG: ${{ github.ref_name }}
        run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: Create NuGet package
        run: dotnet pack --configuration $BUILD_CONFIG /p:PackageVersion=$VERSION

      - name: Publish NuGet package
        run: nuget push **/*.nupkg -Source https://api.nuget.org/v3/index.json -ApiKey ${{secrets.NUGET_API_KEY}}
